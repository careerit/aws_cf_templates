---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Master stack: PathToMasterStackFile'
Parameters:
  PREFIX:
    Description: Prefix for all resources
    Type: String
    Default: CloudOps
  AMIID:
    Description: AMI of the image to be used.
    Type: String
    Default: ami-0823401094a82acde
  InstanceType:
    Description: Size of each of the instance
    Type: String
    Default: t2.micro
  VPCID:
    Description: VPC ID where the ec2 instances are created
    Type: String
    Default: vpc-xxxae21323sdfdr
  ENV:
    Description: Environment to deploy. Use staging for limited resources and no alerts.
    Type: String
    Default: Staging
    AllowedValues:
    - Dev    
    - Staging
    - UAT
    - Production
  PrivSubnetA:
    Description: Subnet A
    Type: String
    Default: PrivSubnetA
  PrivSubnetB:
    Description: Subnet B
    Type: String
    Default: PrivSubnetB  
  PrivSubnetC:
    Description: Subnet C
    Type: String
    Default: PrivSubnetC
  PubSubnetA:
    Description: Public Subnet 
    Type: String
    Default: PubSubnetA
  PubSubnetB:
    Description: Public Subnet 
    Type: String
    Default: PubsubnetB
  PubSubnetC:
    Description: Public Subnet 
    Type: String
    Default: PubSubnetC
Resources:
  ELBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'SSH and Port 80'
      VpcId: !Ref 'VPCID'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'SSH and Port 80'
      VpcId: !Ref 'VPCID'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId:
              Ref: ELBSecurityGroup
  mySimpleConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: 
        Ref: AMIID
      SecurityGroups: 
        - Ref: EC2SecurityGroup      
      InstanceType: 
        Ref: InstanceType                    
  myASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn: TargetGroup
    Properties:
      VPCZoneIdentifier:
        - Ref: PrivSubnetA
        - Ref: PrivSubnetB
        - Ref: PrivSubnetB
      LaunchConfigurationName: !Ref mySimpleConfig
      MinSize: '1'
      MaxSize: '2'
      DesiredCapacity: '2'
      TargetGroupARNs:
        - !Ref 'TargetGroup'
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup    
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 15
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: '200'
      Name: EC2TargetGroup
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: '20'
      UnhealthyThresholdCount: 3
      VpcId: !Ref 'VPCID'
      Tags:
        - Key: Name
          Value: 
            !Join
              - '-'
              - - !Ref 'PREFIX'
                - 'TargetGroup'
        - Key: Environment  
          Value:
            Ref: ENV
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: TargetGroup
      LoadBalancerArn:
          Ref: ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP     
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing # or internal
      Subnets:
        - Ref: PubSubnetA
        - Ref: PubSubnetB
        - Ref: PubSubnetC
      SecurityGroups:
      - !Ref ELBSecurityGroup